@charset "utf-8";
/* =============================================== */
/** extend */
/* ----------------------------------------------- */
// Column
%baseColumn{
  width:$baseWidth;
  margin:0 auto;
}
// Clearfix
%group{
  &:after {
    content: ".";
    display: block;
    clear: both;
    height: 0;
    visibility: hidden;
    font-size:0;
  }
}
//***********************
// Sprite(Resposive/Retina)
// spriteが複数の場合に対応
// @name file
// @spDir sprite-map
// @spUrl sprite-url
//***********************
@mixin sprite-ir($name,$spDir:false,$spUrl:false,$inline:false,$hover:false,$center:false,$posX:false,$posY:false,$mobile:false) {
  // sprite-map
  @if $spDir {
    $spDir: $spDir;
  }@else{
    $spDir: $spriteMap;
  }
  // sprite-url
  @if $spUrl {
    $spUrl: $spUrl;
  }@else{
    $spUrl: $spriteUrl;
  }
  // background
  $filePath   : sprite-file($spDir, $name);
  $fileHeight : image-height($filePath);
  $fileWidth  : image-width($filePath);
  $fileXpos   : nth(sprite-position($spDir, $name), 1);
  $fileYpos   : nth(sprite-position($spDir, $name), 2);
  @if $posY{
    $fileYpos : $fileYpos  + $posY;
  }
  @if $posX{
    $fileXpos : $fileXpos  + $posX;
  }
  @if $mobile{
    $spritePath : sprite-path($spDir);
    $spriteWidth  : round(image-width($spritePath) / 2);
    $spriteHeight : round(image-height($spritePath) / 2);
    background-image: $spDir, none;
    background-position:round( ( $fileXpos / 2)) round( ( $fileYpos / 2 ) ) ;
    padding-top: round($fileHeight / 2);
    width: round($fileWidth / 2);
    -webkit-background-size: $spriteWidth, $spriteHeight;
            background-size: $spriteWidth, $spriteHeight;
  }@else{
    background-image: $spUrl;
    background-position:round($fileXpos) round($fileYpos);
    padding-top: round($fileHeight);
    width: round($fileWidth);
  }
  overflow: hidden;
  height: 0;
  background-repeat: no-repeat;
  // inline-block
  @if $inline { @include inline-block(); }
  @else { display: block; }
  // center
  @if $center {
    margin-left: auto;
    margin-right: auto;
  }
  // hover
  @if $hover{
    $hoverXpos   : round(nth(sprite-position($spDir, #{$name}_on), 1));
    $hoverYpos   : round(nth(sprite-position($spDir, #{$name}_on), 2));
    @if $posX{
      $hoverXpos : $hoverXpos + $posX;
    }
    @if $posY{
      $hoverYpos : $hoverYPos + $posY;
    }
    &:hover, &.active,&.is-active{
      background-position: $hoverXpos $hoverYpos;
    }
  }
}

//***********************
// Sprite
// extend仕様
//***********************
%ir-pc{
  background-image: $spriteUrl;
  overflow: hidden;
  height:0;
  background-repeat:no-repeat;
}
%ir-mb{
  background-image: $spriteUrl,none;
  overflow: hidden;
  height:0;
  background-repeat:no-repeat;
}
@mixin sprite-extend($name,$inline:false,$hover:false,$center:false,$posX:false,$posY:false,$mobile:false) {

  // background
  $filePath   : sprite-file($spriteMap, $name);
  $fileHeight : image-height($filePath);
  $fileWidth  : image-width($filePath);
  $fileXpos   : nth(sprite-position($spriteMap, $name), 1);
  $fileYpos   : nth(sprite-position($spriteMap, $name), 2);
  @if $posY{
    $fileYpos : $fileYpos  + $posY;
  }
  @if $posX{
    $fileXpos : $fileXpos  + $posX;
  }
  @if $mobile{
    $spritePath : sprite-path($spriteMap);
    $spriteWidth  : round(image-width($spritePath) / 2);
    $spriteHeight : round(image-height($spritePath) / 2);
    @extend %ir-mb;
    background-position:round( ( $fileXpos / 2)) round( ( $fileYpos / 2 ) ) ;
    padding-top: round($fileHeight / 2);
    width: round($fileWidth / 2);
    -webkit-background-size: $spriteWidth, $spriteHeight;
            background-size: $spriteWidth, $spriteHeight;
  }@else{
    @extend %ir-pc;
    background-position:round($fileXpos) round($fileYpos);
    padding-top: round($fileHeight);
    width: round($fileWidth);
  }

  // inline-block
  @if $inline { @include inline-block(); }
  @else { display: block; }
  // center
  @if $center {
    margin-left: auto;
    margin-right: auto;
  }
  // hover
  @if $hover{
    $hoverXpos   : round(nth(sprite-position($spriteMap, #{$name}_on), 1));
    $hoverYpos   : round(nth(sprite-position($spriteMap, #{$name}_on), 2));
    @if $posX{
      $hoverXpos : $hoverXpos + $posX;
    }
    @if $posY{
      $hoverYpos : $hoverYPos + $posY;
    }
    &:hover, &.active,&.is-active{
      background-position: $hoverXpos $hoverYpos;
    }
  }
}
//***********************
// Sprite list(PC Only)
// @param $name
// @param $hover
// @param $center
//***********************
%list-pc{
  background-image: $spriteUrl;
  background-repeat:no-repeat;
}
@mixin sprite-list($name,$position:false){
  @extend %list-pc;
  $pos:false;
  $xpos :round(nth(sprite-position($spriteMap, $name), 1));
  $ypos :round(nth(sprite-position($spriteMap, $name), 2));
  @if $position{
    $pos : $ypos + $position;
  }@else{
    $pos : $ypos;
  }
  background-position:$xpos $pos;
}

//***********************
// Inline list
// @param $left
// @param $right
//***********************
%inlineList{
  ul,li{
    display: inline;
  }
}
@mixin inline-list($left:false,$right:false){
  @extend %inlineList;
  li{
    @if $left{
      margin-left: $left;
      &:first-child{
        margin-left: 0px;
      }
    }
    @if $right{
      margin-right: $right;
      &:last-child{
        margin-left: 0px;
      }
    }
  }
}
